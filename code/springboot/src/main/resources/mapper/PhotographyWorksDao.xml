<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.PhotographyWorksDao">


    <resultMap type="com.entity.PhotographyWorksEntity" id="photographyWorksMap">
        <result property="workName" column="workName"/>
        <result property="workCategory" column="workCategory"/>
        <result property="coverImage" column="coverImage"/>
        <result property="shotTime" column="shotTime"/>
        <result property="shotLocation" column="shotLocation"/>
        <result property="publishDate" column="publishDate"/>
        <result property="workContent" column="workContent"/>
        <result property="limitOne" column="limitOne"/>
        <result property="goodsStocks" column="goodsStocks"/>
        <result property="voteCount" column="voteCount"/>
        <result property="thumbsupNum" column="thumbsupNum"/>
        <result property="crazilyNum" column="crazilyNum"/>
        <result property="lastClickTime" column="lastClickTime"/>
        <result property="clickNum" column="clickNum"/>
        <result property="commentCount" column="commentCount"/>
        <result property="price" column="price"/>
        <result property="vipPrice" column="vipPrice"/>
        <result property="favoriteCount" column="favoriteCount"/>
    </resultMap>

	<select id="selectListVO"
		resultType="com.entity.vo.PhotographyWorksVO" >
		SELECT * FROM photographyWorks  photographyWorks         
        <where> 1=1 ${ew.sqlSegment}</where>
        <!-- 1=1：这是一个永真条件，它的作用是：作为where子句的起始条件，使得后续添加的AND条件可以统一处理，不需要考虑是否是第一个条件。这是一个常见的SQL编写技巧，可以简化动态SQL的拼接 -->
        <!-- ew 代表 EntityWrapper（实体包装器） -->
        <!-- sqlSegment 包含了通过EntityWrapper构建的所有查询条件，这些条件会被自动转换为SQL语句并拼接到where子句中 -->
	</select>
	
	<select id="selectVO"
		resultType="com.entity.vo.PhotographyWorksVO" >
		SELECT  photographyWorks.* FROM photographyWorks  photographyWorks 	
 		<where> 1=1 ${ew.sqlSegment}</where>
	</select>

    <select id="selectListView"
		resultType="com.entity.view.PhotographyWorksView" >

		SELECT  photographyWorks.* FROM photographyWorks  photographyWorks 	        
        <where> 1=1 ${ew.sqlSegment}</where>
	</select>
	
	<select id="selectView"
		resultType="com.entity.view.PhotographyWorksView" >
		SELECT * FROM photographyWorks  photographyWorks <where> 1=1 ${ew.sqlSegment}</where>
	</select>
	


</mapper>
