{"remainingRequest":"D:\\0javaproject\\code\\vue-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\0javaproject\\code\\vue-front\\src\\pages\\login\\login.vue?vue&type=style&index=0&id=23b3be22&lang=scss&scoped=true","dependencies":[{"path":"D:\\0javaproject\\code\\vue-front\\src\\pages\\login\\login.vue","mtime":1742990562758},{"path":"D:\\0javaproject\\code\\vue-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0javaproject\\code\\vue-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\0javaproject\\code\\vue-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\0javaproject\\code\\vue-front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0javaproject\\code\\vue-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0javaproject\\code\\vue-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tcGFnZSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIG1pbi1oZWlnaHQ6IDEwMHZoOw0KDQogIC8qIOW3puS+p+aPkueUu+WMuuWfnyAo5Y2g5q+UNikgKi8NCiAgLmxvZ2luLWxlZnQgew0KICAgIGZsZXg6IDY7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7DQogIH0NCg0KICAubG9naW4taWxsdXN0cmF0aW9uIHsNCiAgICBtYXgtd2lkdGg6IDQwJTsNCiAgICBoZWlnaHQ6IGF1dG87DQogIH0NCg0KICAvKiDlj7PkvqfooajljZXljLrln58gKOWNoOavlDQpICovDQogIC5sb2dpbi1yaWdodCB7DQogICAgZmxleDogNDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgfQ0KDQogIC5mb3JtLWNvbnRhaW5lciB7DQogICAgd2lkdGg6IDgwJTsNCiAgICBtYXgtd2lkdGg6IDU2MHB4Ow0KICAgIG1hcmdpbjogMCBhdXRvOw0KICB9DQoNCiAgLmxvZ2luLXN1YnRpdGxlIHsNCiAgICBtYXJnaW4tYm90dG9tOiAxNTBweDsNCiAgICBmb250LXNpemU6IDE4cHg7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGNvbG9yOiAjNzQ3NDc0Ow0KICB9DQogIC5sb2dpbi1mb3JtIHsNCiAgICAubG9naW4tdGl0bGUgew0KICAgICAgbWFyZ2luLXRvcDogNTBweDsNCiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7DQogICAgICBmb250LXNpemU6IDQwcHg7DQogICAgICBmb250LXdlaWdodDogNjAwOw0KICAgICAgY29sb3I6ICMzMzM7DQogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgfQ0KICAgIC8vIOmUmeivr+agh+etvuWklui+ueahhuW3puenuw0KICAgIC5lbC1mb3JtLWl0ZW1fX2Vycm9yew0KICAgICAgbWFyZ2luLWxlZnQ6IDEyMHB4Ow0KDQogICAgLmVsLWZvcm0taXRlbSB7DQogICAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICAgICAgLmVsLWlucHV0X19pbm5lciB7DQogICAgICAgIGhlaWdodDogNDRweDsNCiAgICAgIH0NCg0KICAgIH0NCg0KDQogICAgfQ0KDQogICAgLmxvY2FsaW5wdXQsIC5hdXRoY29kZXsNCiAgICAgIHdpZHRoOiAzMDBweDsNCiAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7DQogICAgICBtYXJnaW4tbGVmdDogMTIwcHg7DQoNCiAgICB9DQogICAgLmF1dGhjb2Rlew0KICAgICAgd2lkdGg6IDE3NXB4Ow0KICAgIH0NCiAgICAuYnRuLWxvZ2luIHsNCiAgICAgIHdpZHRoOiAxMDBweDsNCiAgICAgIGhlaWdodDogNDRweDsNCiAgICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICAgIG1hcmdpbjogMzBweCAyMzBweDsNCiAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7DQogICAgfQ0KDQogICAgLnJlZ2lzdGVyLWxpbmtzIHsNCiAgICAgIG1hcmdpbi10b3A6IDIwcHg7DQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCg0KICAgICAgLmJ0bi1yZWdpc3RlciB7DQogICAgICAgIG1hcmdpbi10b3A6IDhweDsNCiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICBjb2xvcjogIzkwOTM5OTsNCiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KDQogICAgICAgICY6aG92ZXIgew0KICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0KDQouYm90dG9tLWZvb3RlciB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgYm90dG9tOiAwOw0KICBsZWZ0OiAwOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiA4MHB4Ow0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgZm9udC1zaXplOiAxNnB4Ow0KICBjb2xvcjogIzkwOTM5OTsNCiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7DQp9DQoNCi8vLyog5paw5aKe77ya6aqM6K+B56CB5a655Zmo57uf5LiA5rC05bmz5o6S5YiXICovDQovLyDnlKjkuo7ljIXoo7npqozor4HnoIHovpPlhaXmoYblkowgQ2FudmFz77yM6L+Z5qC35Y+v5Lul6YCa6L+HIENTUyDkvb/lroPku6zlnKjlkIzkuIDooYzmjpLliJfjgIINCi5jYXB0Y2hhLXdyYXBwZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KDQp9DQoNCi5jYXB0Y2hhLWNhbnZhcyB7DQogIC8vbWFyZ2luLWxlZnQ6IDEwcHg7DQogIHdpZHRoOiAxMjVweDsNCiAgaGVpZ2h0OiA0MHB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7DQp9DQo="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";AAsRA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/pages/login","sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <!-- 左侧插画区域 -->\r\n    <div class=\"login-left\">\r\n      <img\r\n          class=\"login-illustration\"\r\n          src=\"https://cdn.prod.website-files.com/6364b6fd26e298b0b8b938f5/6364b6fd26e2987e0cb93a02_reset%20password.png\"\r\n          alt=\"Illustration\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 右侧表单区域 -->\r\n    <div class=\"login-right\">\r\n      <!-- 再嵌套一层容器，以便灵活调整表单位置/宽度 -->\r\n      <div class=\"form-container\">\r\n        <el-form\r\n            ref=\"loginForm\"\r\n            :model=\"loginForm\"\r\n            :rules=\"rules\"\r\n            class=\"login-form\"\r\n        >\r\n          <!-- 标题 -->\r\n          <h2 class=\"login-title\">欢迎回来，别来无恙啊!</h2>\r\n          <p class=\"login-subtitle\">基于Java的个人摄影管理网站</p>\r\n\r\n          <!-- 用户名 -->\r\n          <el-form-item prop=\"username\">\r\n            <el-input\r\n                class=\"localinput\"\r\n                v-model=\"loginForm.username\"\r\n                placeholder=\"请输入账号\"\r\n                clearable\r\n            />\r\n          </el-form-item>\r\n\r\n          <!-- 密码 -->\r\n          <el-form-item prop=\"password\">\r\n            <el-input\r\n                class=\"localinput\"\r\n                v-model=\"loginForm.password\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n                clearable\r\n            />\r\n          </el-form-item>\r\n\r\n          <!-- 角色选择(若需要) -->\r\n          <el-form-item v-if=\"roles.length > 1\">\r\n            <el-select\r\n                v-model=\"loginForm.tableName\"\r\n                placeholder=\"请选择角色\"\r\n                @change=\"selectChange\"\r\n                style=\"width: 100%;\"\r\n            >\r\n              <el-option\r\n                  v-for=\"(item, index) in roles\"\r\n                  :key=\"index\"\r\n                  :label=\"item.roleName\"\r\n                  :value=\"item.tableName\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <!-- 验证码：当连续输错3次后显示 -->\r\n          <el-form-item v-if=\"loginErrorCount >= 3\">\r\n            <!-- 使用一个容器统一水平排列验证码输入框和Canvas -->\r\n            <div class=\"captcha-wrapper\">\r\n              <el-input\r\n                  class=\"authcode\"\r\n                  v-model=\"captchaInput\"\r\n                  placeholder=\"请输入验证码\"\r\n                  clearable\r\n              />\r\n              <canvas\r\n                  ref=\"captchaCanvas\"\r\n                  width=\"120\"\r\n                  height=\"40\"\r\n                  class=\"captcha-canvas\"\r\n                  @click=\"generateCaptcha\"\r\n              ></canvas>\r\n            </div>\r\n          </el-form-item>\r\n\r\n          <!-- 登录按钮 -->\r\n          <el-form-item>\r\n            <el-button\r\n                type=\"primary\"\r\n                class=\"btn-login\"\r\n                @click=\"submitForm('loginForm')\"\r\n            >\r\n              登录\r\n            </el-button>\r\n          </el-form-item>\r\n\r\n          <!-- 注册按钮(若需要) -->\r\n          <div class=\"register-links\" v-if=\"roles.length\">\r\n            <router-link\r\n                v-for=\"(item, index) in roles\"\r\n                :key=\"index\"\r\n                v-if=\"item.hasFrontRegister === '是'\"\r\n                :to=\"{ path: '/register', query: { role: item.tableName, pageFlag: 'register' } }\"\r\n                class=\"btn-register\"\r\n            >\r\n              还没有账号？点击注册{{ item.roleName.replace('注册', '') }}\r\n            </router-link>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <footer class=\"bottom-footer\">\r\n      @ all right reserved by  甘肃政法大学 张恒毓 2025\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport menu from '@/config/menu'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      baseUrl: this.$config.baseUrl,\r\n      loginType: 1,\r\n      roleMenus: [],\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        tableName: '',\r\n        code: '', // 若后续需要提交验证码，此字段可使用\r\n      },\r\n      role: '',\r\n      roles: [],\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 新增字段：记录连续登录失败次数、验证码文本、用户输入的验证码\r\n      loginErrorCount: 0,\r\n      captcha: '',\r\n      captchaInput: ''\r\n    }\r\n  },\r\n  created() {\r\n    // 角色信息\r\n    this.roleMenus = menu.list()\r\n    for (let item in this.roleMenus) {\r\n      if (this.roleMenus[item].hasFrontLogin === '是') {\r\n        this.roles.push(this.roleMenus[item])\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    selectChange(e) {\r\n      for (let x in this.roles) {\r\n        if (this.roles[x].tableName === e) {\r\n          this.role = this.roles[x].roleName\r\n        }\r\n      }\r\n    },\r\n    // 生成一个4位随机验证码，并绘制带干扰项的图形验证码\r\n    generateCaptcha() {\r\n      const chars = 'ABCDEFGHJKMNPQRSTUVWXYZabcdefghjkmnpqrstuvwxyz23456789'\r\n      let result = ''\r\n      for (let i = 0; i < 4; i++) {\r\n        result += chars.charAt(Math.floor(Math.random() * chars.length))\r\n      }\r\n      this.captcha = result\r\n      this.drawCaptcha()\r\n      this.captchaInput = ''\r\n    },\r\n    // 利用Canvas绘制验证码及干扰项\r\n    drawCaptcha() {\r\n      const canvas = this.$refs.captchaCanvas\r\n      if (!canvas) return\r\n      const ctx = canvas.getContext('2d')\r\n      const width = canvas.width\r\n      const height = canvas.height\r\n      // 清除画布\r\n      ctx.clearRect(0, 0, width, height)\r\n      // 绘制背景\r\n      ctx.fillStyle = '#f0f0f0'\r\n      ctx.fillRect(0, 0, width, height)\r\n      // 绘制验证码字符\r\n      for (let i = 0; i < this.captcha.length; i++) {\r\n        const char = this.captcha[i]\r\n        const fontSize = 20 + Math.floor(Math.random() * 10)\r\n        const angle = Math.random() * 30 * Math.PI / 180\r\n        ctx.font = `${fontSize}px Arial`\r\n        ctx.fillStyle = `rgb(${Math.floor(Math.random()*100)}, ${Math.floor(Math.random()*100)}, ${Math.floor(Math.random()*100)})`\r\n        ctx.save()\r\n        const x = 10 + i * 25\r\n        const y = 25 + Math.floor(Math.random() * 10)\r\n        ctx.translate(x, y)\r\n        ctx.rotate(angle)\r\n        ctx.fillText(char, 0, 0)\r\n        ctx.restore()\r\n      }\r\n      // 绘制干扰线\r\n      for (let i = 0; i < 5; i++) {\r\n        ctx.strokeStyle = `rgb(${Math.floor(Math.random()*255)}, ${Math.floor(Math.random()*255)}, ${Math.floor(Math.random()*255)})`\r\n        ctx.beginPath()\r\n        ctx.moveTo(Math.random() * width, Math.random() * height)\r\n        ctx.lineTo(Math.random() * width, Math.random() * height)\r\n        ctx.stroke()\r\n      }\r\n      // 绘制干扰点\r\n      for (let i = 0; i < 30; i++) {\r\n        ctx.fillStyle = `rgb(${Math.floor(Math.random()*255)}, ${Math.floor(Math.random()*255)}, ${Math.floor(Math.random()*255)})`\r\n        const x = Math.random() * width\r\n        const y = Math.random() * height\r\n        ctx.beginPath()\r\n        ctx.arc(x, y, 1, 0, 2 * Math.PI)\r\n        ctx.fill()\r\n      }\r\n    },\r\n    submitForm(formName) {\r\n      if (this.roles.length !== 1) {\r\n        if (!this.role) {\r\n          this.$message.error('请选择登录用户类型')\r\n          return\r\n        }\r\n      } else {\r\n        this.role = this.roles[0].roleName\r\n        this.loginForm.tableName = this.roles[0].tableName\r\n      }\r\n      // 当连续输错3次后校验验证码\r\n      if (this.loginErrorCount >= 3) {\r\n        if (!this.captchaInput) {\r\n          this.$message.error('请输入验证码')\r\n          return\r\n        }\r\n        if (this.captchaInput.toLowerCase() !== this.captcha.toLowerCase()) {\r\n          this.$message.error('验证码错误，请重新输入')\r\n          this.generateCaptcha()\r\n          return\r\n        }\r\n      }\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.$http\r\n              .get(`${this.loginForm.tableName}/login`, { params: this.loginForm })\r\n              .then((res) => {\r\n                if (res.data.code === 0) {\r\n                  localStorage.setItem('frontToken', res.data.token)\r\n                  localStorage.setItem('UserTableName', this.loginForm.tableName)\r\n                  localStorage.setItem('username', this.loginForm.username)\r\n                  localStorage.setItem('frontSessionTable', this.loginForm.tableName)\r\n                  localStorage.setItem('frontRole', this.role)\r\n                  localStorage.setItem('keyPath', 0)\r\n                  this.$router.push('/')\r\n                  this.$message.success('登录成功')\r\n                  // 登录成功后重置错误计数及验证码数据\r\n                  this.loginErrorCount = 0\r\n                  this.captcha = ''\r\n                  this.captchaInput = ''\r\n                } else {\r\n                  this.$message.error(res.data.msg)\r\n                  // 登录失败，累计错误次数；达到3次时生成验证码\r\n                  this.loginErrorCount++\r\n                  if (this.loginErrorCount === 3) {\r\n                    this.generateCaptcha()\r\n                  }\r\n                }\r\n              })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-page {\r\n  display: flex;\r\n  min-height: 100vh;\r\n\r\n  /* 左侧插画区域 (占比6) */\r\n  .login-left {\r\n    flex: 6;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #f8f9fa;\r\n  }\r\n\r\n  .login-illustration {\r\n    max-width: 40%;\r\n    height: auto;\r\n  }\r\n\r\n  /* 右侧表单区域 (占比4) */\r\n  .login-right {\r\n    flex: 4;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .form-container {\r\n    width: 80%;\r\n    max-width: 560px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .login-subtitle {\r\n    margin-bottom: 150px;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    color: #747474;\r\n  }\r\n  .login-form {\r\n    .login-title {\r\n      margin-top: 50px;\r\n      margin-bottom: 30px;\r\n      font-size: 40px;\r\n      font-weight: 600;\r\n      color: #333;\r\n      text-align: center;\r\n    }\r\n    // 错误标签外边框左移\r\n    .el-form-item__error{\r\n      margin-left: 120px;\r\n\r\n    .el-form-item {\r\n      margin-bottom: 30px;\r\n      .el-input__inner {\r\n        height: 44px;\r\n      }\r\n\r\n    }\r\n\r\n\r\n    }\r\n\r\n    .localinput, .authcode{\r\n      width: 300px;\r\n      border-radius: 30px;\r\n      margin-left: 120px;\r\n\r\n    }\r\n    .authcode{\r\n      width: 175px;\r\n    }\r\n    .btn-login {\r\n      width: 100px;\r\n      height: 44px;\r\n      font-size: 16px;\r\n      margin: 30px 230px;\r\n      border-radius: 30px;\r\n    }\r\n\r\n    .register-links {\r\n      margin-top: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      .btn-register {\r\n        margin-top: 8px;\r\n        text-align: center;\r\n        color: #909399;\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n          text-decoration: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.bottom-footer {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  font-size: 16px;\r\n  color: #909399;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n///* 新增：验证码容器统一水平排列 */\r\n// 用于包裹验证码输入框和 Canvas，这样可以通过 CSS 使它们在同一行排列。\r\n.captcha-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n}\r\n\r\n.captcha-canvas {\r\n  //margin-left: 10px;\r\n  width: 125px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  border: 1px solid #ddd;\r\n}\r\n</style>\r\n"]}]}